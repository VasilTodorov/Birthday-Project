@model CalendarViewModel

@{
    var today = Model.Today;
    var birthdays = Model.Birthdays.ToList(); // Normalize to remove time
    var startOfMonth = new DateTime(today.Year, today.Month, 1);
    var endOfMonth = startOfMonth.AddMonths(1).AddDays(-1);

    // Get the first day of the week for the calendar
    var firstDayOfCalendar = startOfMonth.AddDays(-(int)startOfMonth.DayOfWeek);
    var lastDayOfCalendar = endOfMonth.AddDays(6 - (int)endOfMonth.DayOfWeek);

    var englishCulture = new System.Globalization.CultureInfo("en-US");
}

<div class="container">
    <h2 class="text-center">Calendar for @today.ToString("MMMM yyyy", englishCulture)</h2>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Sunday</th>
                <th>Monday</th>
                <th>Tuesday</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
                <th>Saturday</th>
            </tr>
        </thead>
        <tbody>
            @{
                for (var current = firstDayOfCalendar; current <= lastDayOfCalendar;)
                {

                    @if(current.DayOfWeek == DayOfWeek.Sunday)
                    {
                        <tr>
                            <!-- Start a new week -->
                            @for(int i = 0; i < 7; current = current.AddDays(1), i++)
                            {
                                <td class="@((current.Month == today.Month ? "" : "text-muted")) @(current == today ? "bg-info text-white" : "")">
                                    @current.Day
                                    @if (birthdays.Find(b => b.Month == current.Month
                                                                && b.Day == current.Day) != default)
                                    {
                                        <span class="badge bg-success">🎉</span>
                                        
                                    }
                                </td>
                            }

                        </tr> <!-- End of the week -->
                    }
                    else
                    {
                        <dir>Something went wrong</dir>
                        current = current.AddDays(1);
                    }


                }
            }
        </tbody>
    </table>
</div>
